// Code generated by "stringer -type Type -output pkg/types/types.string.go pkg/types/types.go"; DO NOT EDIT.

package types

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TypeDecimal-0]
	_ = x[TypeTiny-1]
	_ = x[TypeShort-2]
	_ = x[TypeLong-3]
	_ = x[TypeFloat-4]
	_ = x[TypeDouble-5]
	_ = x[TypeNull-6]
	_ = x[TypeTimestamp-7]
	_ = x[TypeLonglong-8]
	_ = x[TypeInt24-9]
	_ = x[TypeDate-10]
	_ = x[TypeDuration-11]
	_ = x[TypeDatetime-12]
	_ = x[TypeYear-13]
	_ = x[TypeNewDate-14]
	_ = x[TypeVarchar-15]
	_ = x[TypeBit-16]
	_ = x[TypeJSON-245]
	_ = x[TypeNewDecimal-246]
	_ = x[TypeEnum-247]
	_ = x[TypeSet-248]
	_ = x[TypeTinyBlob-249]
	_ = x[TypeMediumBlob-250]
	_ = x[TypeLongBlob-251]
	_ = x[TypeBlob-252]
	_ = x[TypeVarString-253]
	_ = x[TypeString-254]
	_ = x[TypeGeometry-255]
}

const (
	_Type_name_0 = "TypeDecimalTypeTinyTypeShortTypeLongTypeFloatTypeDoubleTypeNullTypeTimestampTypeLonglongTypeInt24TypeDateTypeDurationTypeDatetimeTypeYearTypeNewDateTypeVarcharTypeBit"
	_Type_name_1 = "TypeJSONTypeNewDecimalTypeEnumTypeSetTypeTinyBlobTypeMediumBlobTypeLongBlobTypeBlobTypeVarStringTypeStringTypeGeometry"
)

var (
	_Type_index_0 = [...]uint8{0, 11, 19, 28, 36, 45, 55, 63, 76, 88, 97, 105, 117, 129, 137, 148, 159, 166}
	_Type_index_1 = [...]uint8{0, 8, 22, 30, 37, 49, 63, 75, 83, 96, 106, 118}
)

func (i Type) String() string {
	switch {
	case 0 <= i && i <= 16:
		return _Type_name_0[_Type_index_0[i]:_Type_index_0[i+1]]
	case 245 <= i && i <= 255:
		i -= 245
		return _Type_name_1[_Type_index_1[i]:_Type_index_1[i+1]]
	default:
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
